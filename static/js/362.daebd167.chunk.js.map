{"version":3,"file":"static/js/362.daebd167.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/styles/useTheme.js","../node_modules/@mui/material/esm/Box/boxClasses.js","../node_modules/@mui/material/esm/Box/Box.js","../node_modules/@mui/system/esm/createBox/createBox.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/@mui/system/esm/useMediaQuery/useMediaQuery.js","../node_modules/@mui/material/esm/useMediaQuery/index.js","../node_modules/@mui/material/esm/styles/defaultTheme.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from \"./defaultTheme.js\";\nimport THEME_ID from \"./identifier.js\";\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme[THEME_ID] || theme;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from \"../className/index.js\";\nimport { createTheme } from \"../styles/index.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport boxClasses from \"./boxClasses.js\";\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const {\n      className,\n      component = 'div',\n      ...other\n    } = extendSxProp(inProps);\n    return /*#__PURE__*/_jsx(BoxRoot, {\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme,\n      ...other\n    });\n  });\n  return Box;\n}","import { isPlainObject } from '@mui/utils/deepmerge';\nimport defaultSxConfig from \"./defaultSxConfig.js\";\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = props?.theme?.unstable_sxConfig ?? defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx,\n    ...other\n  } = props;\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return {\n        ...systemProps,\n        ...result\n      };\n    };\n  } else {\n    finalSx = {\n      ...systemProps,\n      ...inSx\n    };\n  }\n  return {\n    ...otherProps,\n    sx: finalSx\n  };\n}","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from \"../ClassNameGenerator/index.js\";\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\";\n// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function unstable_createUseMediaQuery(params = {}) {\n  const {\n    themeId\n  } = params;\n  return function useMediaQuery(queryInput, options = {}) {\n    let theme = useTheme();\n    if (theme && themeId) {\n      theme = theme[themeId] || theme;\n    }\n    // Wait for jsdom to support the match media feature.\n    // All the browsers MUI support have this built-in.\n    // This defensive check is here for simplicity.\n    // Most of the time, the match media logic isn't central to people tests.\n    const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n    const {\n      defaultMatches = false,\n      matchMedia = supportMatchMedia ? window.matchMedia : null,\n      ssrMatchMedia = null,\n      noSsr = false\n    } = getThemeProps({\n      name: 'MuiUseMediaQuery',\n      props: options,\n      theme\n    });\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof queryInput === 'function' && theme === null) {\n        console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n      }\n    }\n    let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n    query = query.replace(/^@media( ?)/m, '');\n    if (query.includes('print')) {\n      console.warn([`MUI: You have provided a \\`print\\` query to the \\`useMediaQuery\\` hook.`, 'Using the print media query to modify print styles can lead to unexpected results.', 'Consider using the `displayPrint` field in the `sx` prop instead.', 'More information about `displayPrint` on our docs: https://mui.com/system/display/#display-in-print.'].join('\\n'));\n    }\n    const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n    const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React.useDebugValue({\n        query,\n        match\n      });\n    }\n    return match;\n  };\n}\nconst useMediaQuery = unstable_createUseMediaQuery();\nexport default useMediaQuery;","import { unstable_createUseMediaQuery } from '@mui/system/useMediaQuery';\nimport THEME_ID from \"../styles/identifier.js\";\nconst useMediaQuery = unstable_createUseMediaQuery({\n  themeId: THEME_ID\n});\nexport default useMediaQuery;","'use client';\n\nimport createTheme from \"./createTheme.js\";\nconst defaultTheme = createTheme();\nexport default defaultTheme;","import resolveProps from '@mui/utils/resolveProps';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","import generateUtilityClass from \"../generateUtilityClass/index.js\";\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}"],"names":["useTheme","theme","useThemeSystem","defaultTheme","THEME_ID","generateUtilityClasses","createTheme","Box","options","arguments","length","undefined","themeId","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","className","component","other","extendSxProp","_jsx","as","clsx","createBox","boxClasses","root","ClassNameGenerator","generate","splitProps","props","result","systemProps","otherProps","config","unstable_sxConfig","defaultSxConfig","Object","keys","forEach","sx","inSx","finalSx","Array","isArray","isPlainObject","defaultGenerator","componentName","createClassNameGenerator","configure","generator","reset","globalStateClasses","active","checked","completed","disabled","error","expanded","focused","focusVisible","open","readOnly","required","selected","generateUtilityClass","slot","globalStatePrefix","globalStateClass","transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","x","y","translateX","translateY","scaleX","scaleY","scale","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","values","split","map","convertTransformToNumber","value","parseFloat","trim","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","_ref","top","left","right","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","current","element","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","has","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","set","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","isNone","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","transformPerspective","opacity","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","init","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","some","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","getValueState","resolveVariantFromProps","definition","custom","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","isBrowser","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","remove","removeChild","feature","isMounted","child","enteringChildren","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","_len","args","_key","scheduleRenderMicrotask","DOMVisualElement","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","Fragment","LazyContext","createContext","strict","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useRender","isStatic","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","PresenceContext","make","createRenderState","makeState","useConstant","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","useIsomorphicLayoutEffect","MotionIsMounted","animationState","animateChanges","useEffect","MotionHandoffMarkAsComplete","createMotionComponent","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","LayoutGroupContext","id","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","resolveVariant","getValueTransition","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","makeAnimationInstant","duration","combineFunctions","pipe","transformers","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","p","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","subject","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","all","setTarget","calcChildStagger","sort","numChildren","size","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","isSVGElement","isObject","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","isHTMLElement","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","hasAttribute","handlePressEvent","HTMLButtonElement","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","motion","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","useMediaQueryOld","query","defaultMatches","ssrMatchMedia","noSsr","setMatch","useEnhancedEffect","queryList","updateMatch","maybeReactUseSyncExternalStore","useSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","getSnapshot","mediaQueryList","unstable_createUseMediaQuery","params","queryInput","supportMatchMedia","getThemeProps","console","warn","components","defaultProps","resolveProps","slots"],"sourceRoot":""}